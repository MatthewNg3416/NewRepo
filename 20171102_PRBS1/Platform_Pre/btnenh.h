#if !defined(AFX_BTNENH_H__D678ABA1_54D8_4215_BE7D_E1C5D9837337__INCLUDED_)
#define AFX_BTNENH_H__D678ABA1_54D8_4215_BE7D_E1C5D9837337__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;
class CTexture;

/////////////////////////////////////////////////////////////////////////////
// CBtnEnh wrapper class

class CBtnEnh : public CWnd
{
protected:
	DECLARE_DYNCREATE(CBtnEnh)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x40b5ce81, 0xc5a8, 0x11d2, { 0x81, 0x83, 0x0, 0x0, 0x24, 0x40, 0xdf, 0xd8 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetCaption();
	void SetCaption(LPCTSTR);
	long GetShape();
	void SetShape(long);
	long GetSlant();
	void SetSlant(long);
	long GetSurface();
	void SetSurface(long);
	unsigned long GetPictureTranspColor();
	void SetPictureTranspColor(unsigned long);
	CString GetSoundDown();
	void SetSoundDown(LPCTSTR);
	CString GetSoundUp();
	void SetSoundUp(LPCTSTR);
	CString GetCursor();
	void SetCursor(LPCTSTR);
	CString GetSoundMouseOver();
	void SetSoundMouseOver(LPCTSTR);
	CString GetSoundMouseOut();
	void SetSoundMouseOut(LPCTSTR);
	COleFont GetFontTextLT();
	void SetFontTextLT(LPDISPATCH);
	COleFont GetFontTextCT();
	void SetFontTextCT(LPDISPATCH);
	COleFont GetFontTextRT();
	void SetFontTextRT(LPDISPATCH);
	COleFont GetFontTextLM();
	void SetFontTextLM(LPDISPATCH);
	COleFont GetFontTextRM();
	void SetFontTextRM(LPDISPATCH);
	COleFont GetFontTextLB();
	void SetFontTextLB(LPDISPATCH);
	COleFont GetFontTextCB();
	void SetFontTextCB(LPDISPATCH);
	COleFont GetFontTextRB();
	void SetFontTextRB(LPDISPATCH);
	CString GetPicture();
	void SetPicture(LPCTSTR);
	CString GetPicturePressed();
	void SetPicturePressed(LPCTSTR);
	CString GetPictureMouseOver();
	void SetPictureMouseOver(LPCTSTR);
	CString GetPictureCustom();
	void SetPictureCustom(LPCTSTR);
	long GetPicturePosition();
	void SetPicturePosition(long);
	short GetPictureXOffset();
	void SetPictureXOffset(short);
	short GetPictureYOffset();
	void SetPictureYOffset(short);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	long GetPictureTranspMode();
	void SetPictureTranspMode(long);
	BOOL GetButtonCustomRaised();
	void SetButtonCustomRaised(BOOL);
	unsigned long GetBackColorContainer();
	void SetBackColorContainer(unsigned long);
	BOOL GetMovePictureOnPress();
	void SetMovePictureOnPress(BOOL);
	short GetButtonRaiseFactor();
	void SetButtonRaiseFactor(short);
	unsigned long GetHighlightColor();
	void SetHighlightColor(unsigned long);
	unsigned long GetShadowColor();
	void SetShadowColor(unsigned long);
	BOOL GetButtonCustomFitPicture();
	void SetButtonCustomFitPicture(BOOL);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	COleFont GetFontTextCaption();
	void SetFontTextCaption(LPDISPATCH);
	CString GetHyperlink();
	void SetHyperlink(LPCTSTR);
	BOOL GetEnableInternetLoadAtDT();
	void SetEnableInternetLoadAtDT(BOOL);
	long GetSmoothEdges();
	void SetSmoothEdges(long);
	CString GetTagEx();
	void SetTagEx(LPCTSTR);
	BOOL GetPictureKeepRatio();
	void SetPictureKeepRatio(BOOL);
	long GetFocusMode();
	void SetFocusMode(long);
	long GetSpecialEffect();
	void SetSpecialEffect(long);
	short GetCaptionWordWrapPerc();
	void SetCaptionWordWrapPerc(short);
	short GetOptimization();
	void SetOptimization(short);
	BOOL GetClickable();
	void SetClickable(BOOL);
	unsigned long GetBackColor();
	void SetBackColor(unsigned long);
	unsigned long GetForeColor();
	void SetForeColor(unsigned long);
	BOOL GetIgnoreSpaceBar();
	void SetIgnoreSpaceBar(BOOL);
	long GetSpecialEffectFactor();
	void SetSpecialEffectFactor(long);
	unsigned long GetForeColorDisabled();
	void SetForeColorDisabled(unsigned long);
	unsigned long GetBackColorDisabled();
	void SetBackColorDisabled(unsigned long);
	unsigned long GetBackColorMouseOver();
	void SetBackColorMouseOver(unsigned long);
	unsigned long GetBackColorFocus();
	void SetBackColorFocus(unsigned long);
	unsigned long GetBackColorInterior();
	void SetBackColorInterior(unsigned long);
	unsigned long GetForeColorMouseOver();
	void SetForeColorMouseOver(unsigned long);
	long GetFlatPillowFactor();
	void SetFlatPillowFactor(long);
	long GetShadowMode();
	void SetShadowMode(long);
	long GetStyle();
	void SetStyle(long);
	CString GetPictureDisabled();
	void SetPictureDisabled(LPCTSTR);
	unsigned long GetForeColorPressed();
	void SetForeColorPressed(unsigned long);
	unsigned long GetBackColorPressed();
	void SetBackColorPressed(unsigned long);
	short GetValue();
	void SetValue(short);
	long GetOrientation();
	void SetOrientation(long);
	LPDISPATCH GetColorSurfaceNormal();
	void SetColorSurfaceNormal(LPDISPATCH);
	LPDISPATCH GetColorSurfaceMO();
	void SetColorSurfaceMO(LPDISPATCH);
	LPDISPATCH GetColorSurfaceInternal();
	void SetColorSurfaceInternal(LPDISPATCH);
	LPDISPATCH GetColorSurfaceFocus();
	void SetColorSurfaceFocus(LPDISPATCH);
	LPDISPATCH GetColorSurfaceDisabled();
	void SetColorSurfaceDisabled(LPDISPATCH);
	LPDISPATCH GetColorSurfacePressed();
	void SetColorSurfacePressed(LPDISPATCH);
	LPDISPATCH GetTextDescrCaption();
	void SetTextDescrCaption(LPDISPATCH);
	LPDISPATCH GetTextDescrLT();
	void SetTextDescrLT(LPDISPATCH);
	LPDISPATCH GetTextDescrCT();
	void SetTextDescrCT(LPDISPATCH);
	LPDISPATCH GetTextDescrRT();
	void SetTextDescrRT(LPDISPATCH);
	LPDISPATCH GetTextDescrLM();
	void SetTextDescrLM(LPDISPATCH);
	LPDISPATCH GetTextDescrRM();
	void SetTextDescrRM(LPDISPATCH);
	LPDISPATCH GetTextDescrLB();
	void SetTextDescrLB(LPDISPATCH);
	LPDISPATCH GetTextDescrCB();
	void SetTextDescrCB(LPDISPATCH);
	LPDISPATCH GetTextDescrRB();
	void SetTextDescrRB(LPDISPATCH);
	CTexture GetTextureSurface();
	void SetTextureSurface(LPDISPATCH);
	long GetFrameEffect();
	void SetFrameEffect(long);
	BOOL GetOptionGroupDelimiter();
	void SetOptionGroupDelimiter(BOOL);
	BOOL GetPictureVisible();
	void SetPictureVisible(BOOL);
	long GetTextCaptionAlignment();
	void SetTextCaptionAlignment(long);
	short GetSpotlightOffsetX();
	void SetSpotlightOffsetX(short);
	short GetSpotlightOffsetY();
	void SetSpotlightOffsetY(short);
	short GetSpotlightResizeWidth();
	void SetSpotlightResizeWidth(short);
	short GetSpotlightResizeHeight();
	void SetSpotlightResizeHeight(short);
	short GetCornerFactor();
	void SetCornerFactor(short);
	BOOL GetUseAntialias();
	void SetUseAntialias(BOOL);

// Operations
public:
	void EnableSound(short nSound, BOOL bEnable);
	void DoClick();
	void Refresh();
	void SetNSContainerColor(unsigned long Color);
	long SetPictureFromHandle(long index, long hBmp);
	long SetPictureFromMemory(long index, const VARIANT& pData, long sizeData);
	long SetAnimFromMemory(long index, const VARIANT& pData, long sizeData);
	long SetCursorFromHandle(long hCursor);
	long SetSoundFromMemory(long index, const VARIANT& pData, long sizeData);
	void SetAutomaticRefresh(BOOL bAutoRefresh);
	void SetSoundSync(long sound, BOOL flag);
	void EnableAcceleratorForVB();
	long SetPictureFromNet(long index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	long SetSoundFromNet(long index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	BOOL SetAnimFromNet(long index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	void MouseCapture(BOOL bCapture);
	BOOL ExportBtnImage(short nImage, LPCTSTR strFilename, long nFormat);
	short LoadTemplate(LPCTSTR strFilename);
	short SaveTemplate(LPCTSTR strFilename);
	short LoadTemplateEx(LPCTSTR strFilename);
	short SaveTemplateEx(LPCTSTR strFilename);
	void SetHelpLink(short nPage, LPCTSTR strLink);
	void SetTemplateBinDir(long nType, LPCTSTR strDirPath);
	CString GetHelperString(short dispid, short nValue);
	void ResetProperties();
	long GetBackPicture(long hWndDest);
	void SetBackPicture(long hBitmap);
	short AnimGetFramesRate();
	long AnimSetFramesRate(short nRate);
	short AnimGetFramesCount();
	long AnimShowFrame(short nFrame);
	long AnimPause();
	long AnimResume();
	long AnimInvertPlay();
	void SetBackPictureVisible(BOOL bVisible);
	void ClearButtonCache();
	short GetValueEx();
	void SetValueEx(short nValue);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_BTNENH_H__D678ABA1_54D8_4215_BE7D_E1C5D9837337__INCLUDED_)
