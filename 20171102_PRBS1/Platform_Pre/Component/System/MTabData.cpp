/* Generated by Together */
#include "stdafx.h"
#include "MTabData.h"
#include "MyProgressWnd.h"
#include "common.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

MTabData::MTabData()
{
	initialize();
}

MTabData::MTabData(CString strFileName) : MFileManager(strFileName)
{
	initialize();
}

MTabData::MTabData(CString strFileName, CString strPath)
	: MFileManager(strFileName, strPath)
{
	initialize();
}

void MTabData::initialize()
{
	m_iXuTabQty = 0;
	for (int i = 0; i < DEF_MAX_TAB_XU; i++)
	{
		m_dXuTabPitch[i]		= 0.0;
		m_bUseXuTab[i]			= TRUE;
	}

	m_iXdTabQty = 0;
	for (int i = 0; i < DEF_MAX_TAB_XD; i++)
	{
		m_dXdTabPitch[i]		= 0.0;
		m_bUseXdTab[i]			= TRUE;
	}

	m_iYlTabQty = 0;
	for (int i = 0; i < DEF_MAX_TAB_YL; i++)
	{
		m_dYlTabPitch[i]		= 0.0;
		m_bUseYlTab[i]			= TRUE;
	}

	m_iYrTabQty = 0;
	for (int i = 0; i < DEF_MAX_TAB_YR; i++)
	{
		m_dYrTabPitch[i]		= 0.0;
		m_bUseYrTab[i]			= TRUE;
	}

	//120625.kms_______
	m_bHalfandHalf = FALSE;
	//_________________
}

MTabData::~MTabData()
{
}

BOOL MTabData::ReadData()
{
	BOOL	bReturn = TRUE;
	CString	szBuff;
	CString	strItem;
	CString	strSection = "PreBonder Data";	// Section명 설정

	if (!GetValue(strSection, "XuTabQty", &m_iXuTabQty))
		DISPLAY_READ_ERROR(strSection, "XuTabQty", bReturn);

	for (int i = 0; i < DEF_MAX_TAB_XU; i++)
	{
		strItem.Format(_T("XuTabPitch[%d]"), i);
		if (!GetValue(strSection, strItem, &m_dXuTabPitch[i]))
		{
			m_dXuTabPitch[i] = 0.0;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		strItem.Format(_T("UseXuTab[%d]"), i);
		if (!GetValue(strSection, strItem, &szBuff))
		{
			m_bUseXuTab[i] = FALSE;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		if (!szBuff.Compare(_T("TRUE")))
			m_bUseXuTab[i] = TRUE;
		else
			m_bUseXuTab[i] = FALSE;
	} 

	if (!GetValue(strSection, _T("XdTabQty"), &m_iXdTabQty))
		DISPLAY_READ_ERROR(strSection, _T("XdTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_XD; i++)
	{
		strItem.Format(_T("XdTabPitch[%d]"), i);
		if (!GetValue(strSection, strItem, &m_dXdTabPitch[i]))
		{
			m_dXdTabPitch[i] = 0.0;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		strItem.Format(_T("UseXdTab[%d]"), i);
		if (!GetValue(strSection, strItem, &szBuff))
		{
			m_bUseXdTab[i] = FALSE;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		if (!szBuff.Compare(_T("TRUE")))
			m_bUseXdTab[i] = TRUE;
		else
			m_bUseXdTab[i] = FALSE;
	} 

	if (!GetValue(strSection, _T("YlTabQty"), &m_iYlTabQty))
		DISPLAY_READ_ERROR(strSection, _T("YlTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_YL; i++)
	{
		strItem.Format(_T("YlTabPitch[%d]"), i);
		if (!GetValue(strSection, strItem, &m_dYlTabPitch[i]))
		{
			m_dYlTabPitch[i] = 0.0;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		strItem.Format(_T("UseYlTab[%d]"), i);
		if (!GetValue(strSection, strItem, &szBuff))
		{
			m_bUseYlTab[i] = FALSE;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		if (!szBuff.Compare(_T("TRUE")))
			m_bUseYlTab[i] = TRUE;
		else
			m_bUseYlTab[i] = FALSE;
	} 

	if (!GetValue(strSection, _T("YrTabQty"), &m_iYrTabQty))
		DISPLAY_READ_ERROR(strSection, _T("YrTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_YR; i++)
	{
		strItem.Format(_T("YrTabPitch[%d]"), i);
		if (!GetValue(strSection, strItem, &m_dYrTabPitch[i]))
		{
			m_dYrTabPitch[i] = 0.0;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		strItem.Format(_T("UseYrTab[%d]"), i);
		if (!GetValue(strSection, strItem, &szBuff))
		{
			m_bUseYrTab[i] = FALSE;
			DISPLAY_READ_ERROR(strSection, strItem, bReturn);
		}

		if (!szBuff.Compare(_T("TRUE")))
			m_bUseYrTab[i] = TRUE;
		else
			m_bUseYrTab[i] = FALSE;
	} 

	/*/
#ifdef DEF_SOURCE_SYSTEM
	//120625.kms____________
	if (!GetValue(strSection, _T("HalfandHalf"), &m_bHalfandHalf))
	{  
		DISPLAY_READ_ERROR(strSection, _T("HalfandHalf"), bReturn);
	}
	//______________________
#endif
	/*/

	return bReturn;
}

BOOL MTabData::WriteData()
{
	if (!MakeBackUpFile())
	{
		//Back Up File을 만드는데 실패 했습니다. 계속 진행 하겠습니까?
		if (MyMessageBox(MY_MESSAGE_BOX,10000, _T("File Write Error"), M_ICONERROR|M_YESNO) == IDNO) 
			return FALSE;
	}

	BOOL bReturn = TRUE;
	CString strItem;
	CString strSection = "PreBonder Data";	// Section명 설정

	if (!SetValue(strSection, _T("XuTabQty"), m_iXuTabQty))
		DISPLAY_WRITE_ERROR(strSection, _T("XuTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_XU; i++)
	{
		strItem.Format(_T("XuTabPitch[%d]"), i);
		if (!SetValue(strSection, strItem, m_dXuTabPitch[i]))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);

		strItem.Format(_T("UseXuTab[%d]"), i);
		if (!SetValue(strSection, strItem, m_bUseXuTab[i] ?_T("TRUE") : _T("FALSE")))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);
	}

	if (!SetValue(strSection, _T("XdTabQty"), m_iXdTabQty))
		DISPLAY_WRITE_ERROR(strSection, _T("XdTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_XD; i++)
	{
		strItem.Format(_T("XdTabPitch[%d]"), i);
		if (!SetValue(strSection, strItem, m_dXdTabPitch[i]))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);

		strItem.Format(_T("UseXdTab[%d]"), i);
		if (!SetValue(strSection, strItem, m_bUseXdTab[i] ?_T("TRUE") : _T("FALSE")))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);
	}

	if (!SetValue(strSection, _T("YlTabQty"), m_iYlTabQty))
		DISPLAY_WRITE_ERROR(strSection, _T("YlTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_YL; i++)
	{
		strItem.Format(_T("YlTabPitch[%d]"), i);
		if (!SetValue(strSection, strItem, m_dYlTabPitch[i]))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);

		strItem.Format(_T("UseYlTab[%d]"), i);
		if (!SetValue(strSection, strItem, m_bUseYlTab[i] ?_T("TRUE") : _T("FALSE")))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);
	}

	if (!SetValue(strSection, _T("YrTabQty"), m_iYrTabQty))
		DISPLAY_WRITE_ERROR(strSection, _T("YrTabQty"), bReturn);

	for (int i = 0; i < DEF_MAX_TAB_YR; i++)
	{
		strItem.Format(_T("YrTabPitch[%d]"), i);
		if (!SetValue(strSection, strItem, m_dYrTabPitch[i]))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);

		strItem.Format(_T("UseYrTab[%d]"), i);
		if (!SetValue(strSection, strItem, m_bUseYrTab[i] ?_T("TRUE") : _T("FALSE")))
			DISPLAY_WRITE_ERROR(strSection, strItem, bReturn);
	}


#ifdef DEF_SOURCE_SYSTEM
	//120625.kms___________________
	if (!SetValue(strSection, _T("HalfandHalf"), m_bHalfandHalf))
		DISPLAY_WRITE_ERROR(strSection, _T("HalfandHalf"), bReturn);
	//_____________________________
#endif

	return bReturn;
}

MTabData& MTabData::CopyData(MTabData& tabData)
{
	if (this == &tabData) return *this;

	int i = 0;
	m_iXuTabQty		= tabData.m_iXuTabQty;
	for (int i=0; i<DEF_MAX_TAB_XU; i++)
	{
		m_dXuTabPitch[i]	= tabData.m_dXuTabPitch[i];
		m_bUseXuTab[i]		= tabData.m_bUseXuTab[i];
	}

	m_iXdTabQty		= tabData.m_iXdTabQty;
	for (int i=0; i<DEF_MAX_TAB_XD; i++)
	{
		m_dXdTabPitch[i]	= tabData.m_dXdTabPitch[i];
		m_bUseXdTab[i]		= tabData.m_bUseXdTab[i];
	}

	m_iYlTabQty		= tabData.m_iYlTabQty;
	for (int i=0; i<DEF_MAX_TAB_YL; i++)
	{
		m_dYlTabPitch[i]	= tabData.m_dYlTabPitch[i];
		m_bUseYlTab[i]		= tabData.m_bUseYlTab[i];
	}

	m_iYrTabQty		= tabData.m_iYrTabQty;
	for (int i=0; i<DEF_MAX_TAB_YR; i++)
	{
		m_dYrTabPitch[i]	= tabData.m_dYrTabPitch[i];
		m_bUseYrTab[i]		= tabData.m_bUseYrTab[i];
	}
	return (*this);
}

/* End Of Code */