/* Generated by Together */
#include "stdafx.h"
#include "common.h"
#include "MTeachingPosData.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

/**경로가 임의 폴더면 실행하는 생성자*/
MTeachingPosData::MTeachingPosData(STeachingInfo sTeachingInfo, CString strFileName, CString strPath)
: MFileManager(strFileName, strPath)
{
	initialize(sTeachingInfo);	// 멤버 변수 초기화 
}

/**경로가 Data 폴더면 실행하는 생성자*/
MTeachingPosData::MTeachingPosData(STeachingInfo sTeachingInfo, CString strFileName)
: MFileManager(strFileName)
{
	initialize(sTeachingInfo);	// 멤버 변수 초기화 
}

MTeachingPosData::~MTeachingPosData()
{
}

// 멤버 변수 초기화
void MTeachingPosData::initialize(STeachingInfo sTeachingInfo)
{
	for (int i = 0; i < 3; i++)
	{
		m_strUnitName[i] = sTeachingInfo.m_strUnitName[i];
	}

	m_strSectionName	= sTeachingInfo.m_strSectionName;
	m_iNumAxis			= sTeachingInfo.m_iNumAxis;

	for (int i = 0; i < m_iNumAxis; i++)
	{
		m_strSectionPostfix[i] = sTeachingInfo.m_strSectionPostfix[i];
	}

	m_iNumTeachingPos = sTeachingInfo.m_iNumTeachingPos;

	for (int i = 0; i < m_iNumTeachingPos; i++)
	{
		m_sPosition[i].m_bUse = sTeachingInfo.m_sPosition[i].m_bUse;
		for (int j=0;j<3; j++)
		{
			m_sPosition[i].m_strNewLineName[j] = sTeachingInfo.m_sPosition[i].m_strNewLineName[j];
		}
		m_sPosition[i].m_strName = sTeachingInfo.m_sPosition[i].m_strName;
	}


	// 포지션 데이타를 Clear 한다.
	for (int i=0;i<DEF_MAX_TEACHING_POS; i++)
	{
		for (int j = 0; j < DEF_MAX_TEACHING_AXIS; j++)
		{
			m_TeachingPos[i][j] = 0.0;
		}
	}

	// 정보로 부터 Key Name을 생성 한다.
	for (int i = 0; i < m_iNumTeachingPos; i++)
	{
		for (int j = 0; j < m_iNumAxis; j++)
		{
			m_strKeyName[i][j] = m_sPosition[i].m_strName + "_" + m_strSectionPostfix[j];
		}
	}
}

// 파일에서 데이타 로드 하기
BOOL MTeachingPosData::ReadData()
{
	BOOL bReturn = TRUE;

	// 포지션별, 축별로 데이타 읽기
	for (int i = 0; i < m_iNumTeachingPos; i++)
	{
		for (int j = 0; j < m_iNumAxis; j++)
		{
			if (!GetValue(m_strSectionName, m_strKeyName[i][j], &m_TeachingPos[i][j]))
				DISPLAY_READ_ERROR(m_strSectionName, m_strKeyName[i][j], bReturn);
		}
	}

	return bReturn;   
}

// 파일에 데이타 저장 하기
BOOL MTeachingPosData::WriteData()
{
	if (!MakeBackUpFile())
	{
		//Back Up File을 만드는데 실패 했습니다. 계속 진행 하겠습니까?
		if (MyMessageBox(MY_MESSAGE_BOX,10000, _T("File Write Error"), M_ICONERROR|M_YESNO) == IDNO) 
			return FALSE;
	}

	BOOL ret = TRUE;

	// 포지션별, 축별로 데이타 쓰기
	for (int i = 0; i < m_iNumTeachingPos; i++)
	{
		for (int j = 0; j < m_iNumAxis; j++)
		{
			if (!SetValue(m_strSectionName, m_strKeyName[i][j], m_TeachingPos[i][j]))
				ret = FALSE;
		}
	}
	
	if (!ret)	// 에러시 결과 Display
	{
		char eMsg[200];
		char eMsg1[200];
		memset(eMsg, 0, sizeof(eMsg));
		memset(eMsg1, 0, sizeof(eMsg1));
		sprintf(eMsg, "%s File is an incorrect.", LPSTR(LPCTSTR(m_strFileName)));
		sprintf(eMsg1, "%s File Write Error!", LPSTR(LPCTSTR(m_strFileName)));
		MyMessageBox(eMsg, eMsg1, M_ICONERROR);
		return FALSE;
	}

	return TRUE;
}

/** Data가 있는 Path를 설정 하는 함수 */
void MTeachingPosData::SetPath(CString strPath)
{
	SetFilePath(strPath);
}

/* End Of Code */