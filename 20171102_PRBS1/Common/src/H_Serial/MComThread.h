/* Generated by Together */

#ifndef MCOMTHREAD_H
#define MCOMTHREAD_H

#include "IComThread.h"
#include "DefSerialValue.h"
#include "CQueue.h"

class MComThread : public IComThread {
public:    

	/**	BaudRate				*/
	UINT			m_uBaud;				// baudrate
	
	/** Parity				    */
	UINT			m_uParity;				// parity 
	
	/**	Databits				*/
	UINT			m_uDatabits;			// databits 

	/** Stopbits				*/
	UINT			m_uStopbits;			// stopbits 

	/** size to WriteBuffer		*/
	UINT			m_uWritebuffersize;		// size to the writebuffer

	char m_szEnd;

	MComThread(SCommonAttribute commonData, SSerialPortData datComponent);
	~MComThread();

     /**
     * 포트 열기 : OpenPort("COM1", CBR_9600); 
     */
    int OpenPort();

    int ClosePort();

    /**
     * WriteComm(buff, 30)과 같이 버퍼와 그 크기를 건네면 된다. 
     */
    int WriteComm(BYTE* pBuff, DWORD nToWrite);

    /**
     * 포트를 연 후에 포트에 자료가 도착하면 WM_COMM_READ 메시지가 메인 
     * 윈도우에 전달된다. ON_MESSAGE 매크로를 이용, 함수를 연결하고
     *  m_ReadData String에 저장된 데이터를 이용 읽기 
     */
    int ReadComm(BYTE* pBuff, DWORD nToRead);

	/*
	 * Restart Thread
	 */
	int RestartThread();

	/*
	 * Pause Thread
	 */
	int PauseThread();
	
    int ReceiveData(unsigned char* buf, int iBufSize);

    int SendData(unsigned char* buf);

	int ReceiveData(char* buf, int iBufSize);

	int SendData(char* buf);
	
	void ClearRecvQueue();

	int GetPortNo();

private:    

    /**
     * 통신 포트 파일 핸들 
     */
    HANDLE m_hComm;

     /**
     * 포트 이름 (COM1 ..) 
     */
    CString m_sPortName;

	/**
     * 포트가 열렸는지 유무를 나타냄 
     */
    BOOL m_bConnected;

    /**
     * 포트 파일 Overlapped structure 
     */
    OVERLAPPED m_osRead;

    /**
     * 포트 파일 Overlapped structure 
     */
    OVERLAPPED m_osWrite;

    /**
     * WM_COMM_READ와 함께 보내는 인수 
     */
    BYTE m_wPortID;

	/**
     * 통신 버퍼 
     */
    CQueue m_QueueRead;

	/*
	 * thread
	 */
	CWinThread*	m_Thread;

	/*
	* Monitoring Thread
	*/
	static UINT ThreadWatchComm(LPVOID pParam);
};
#endif //MCOMTHREAD_H
