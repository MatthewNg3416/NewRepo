/* Generated by Together */
#include "stdafx.h"
#include "MAxisData.h"
#include "common.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

CString MAxisData::m_strSectionCommon = "Common Data";
EVelocityMode MAxisData::eVelocityMode = VELOCITY_MODE_SLOW;

MAxisData::MAxisData(CString strSection, CString strFileName) : MFileManager(strFileName)
{
	m_strSection = strSection;	// Section명 설정
	Initialize();				// 멤버 변수 초기화
}

MAxisData::MAxisData(CString strSection, CString strFileName, CString strPath) : MFileManager(strFileName, strPath)
{
	m_strSection = strSection;	// Section명 설정
	Initialize();				// 멤버 변수 초기화
}

MAxisData::~MAxisData()
{
}

void MAxisData::Initialize()
{
	dCWSWLimit			= 0.0;
	dCCWSWLimit			= 0.0;
	dHomeFastVelocity	= 0.0;
	dHomeSlowVelocity	= 0.0;
	iHomeAccelerate		= 0;
	dHomeOffset			= 0.0;
	dJogSlow			= 0.0;
	dJogFast			= 0.0;
	iRunAccelerate		= 0;
	dRunVelocity		= 0.0;
	dSlowRunVelocity	= 0.0;
	dLimitTime			= 0.0;
	dOriginLimitTime	= 0.0;
	dStabilityTime		= 0.0;
	dTolerance			= 0.0;
	dPassOffset			= 0.0;
}

/** INI 형식의 Text 파일에서 Data를 읽는다 */
BOOL MAxisData::ReadData()
{
	BOOL ret = TRUE;

	if (!GetValue(m_strSection, _T("CWSWLimit"), &dCWSWLimit))
		DISPLAY_READ_ERROR(m_strSection, "CWSWLimit", ret);
	
	if (!GetValue(m_strSection, _T("CCWSWLimit"), &dCCWSWLimit))
		DISPLAY_READ_ERROR(m_strSection, "CCWSWLimit", ret);

	if (!GetValue(m_strSection, _T("HomeFastVelocity"), &dHomeFastVelocity))
		DISPLAY_READ_ERROR(m_strSection, "HomeFastVelocity", ret);

	if (!GetValue(m_strSection, _T("HomeSlowVelocity"), &dHomeSlowVelocity))
		DISPLAY_READ_ERROR(m_strSection, "HomeSlowVelocity", ret);

	if (!GetValue(m_strSection, _T("HomeAccelerate"), &iHomeAccelerate))
		DISPLAY_READ_ERROR(m_strSection, "HomeAccelerate", ret);

	if (!GetValue(m_strSection, _T("HomeOffset"), &dHomeOffset))
		DISPLAY_READ_ERROR(m_strSection, "HomeOffset", ret);

	if (!GetValue(m_strSection, _T("JogSlow"), &dJogSlow))
		DISPLAY_READ_ERROR(m_strSection, "JogSlow", ret);

	if (!GetValue(m_strSection, _T("JogFast"), &dJogFast))
		DISPLAY_READ_ERROR(m_strSection, "JogFast", ret);

	if (!GetValue(m_strSection, _T("RunAccelerate"), &iRunAccelerate))
		DISPLAY_READ_ERROR(m_strSection, "RunAccelerate", ret);

	if (!GetValue(m_strSection, _T("RunVelocity"), &dRunVelocity))
		DISPLAY_READ_ERROR(m_strSection, "RunVelocity", ret);

	if (!GetValue(m_strSection, _T("SlowRunVelocity"), &dSlowRunVelocity))
		DISPLAY_READ_ERROR(m_strSection, "SlowRunVelocity", ret);

	if (!GetValue(m_strSection, _T("LimitTime"), &dLimitTime))
		DISPLAY_READ_ERROR(m_strSection, "LimitTime", ret);

	if (!GetValue(m_strSection, _T("OriginLimitTime"), &dOriginLimitTime))
		DISPLAY_READ_ERROR(m_strSection, "OriginLimitTime", ret);

	if (!GetValue(m_strSection, _T("StabilityTime"), &dStabilityTime))
		DISPLAY_READ_ERROR(m_strSection, "StabilityTime", ret);

	if (!GetValue(m_strSection, _T("Tolerance"), &dTolerance))
		DISPLAY_READ_ERROR(m_strSection, "Tolerance", ret);

	if (!GetValue(m_strSection, _T("PassOffset"), &dPassOffset))
		DISPLAY_READ_ERROR(m_strSection, "PassOffset", ret);

	return ret;
}

/** INI 형식의 Text 파일에 Data를 기록한다 */
BOOL MAxisData::WriteData()
{
	if (!MakeBackUpFile())
	{
		//CString strMsg = ML_MSG("Back Up File을 만드는데 실패 했습니다. 계속 진행 하겠습니까?",
		//	"It was failed to make backup file. Go ahead?");
		//if (MyMessageBox(strMsg.GetBuffer(strMsg.GetLength()), "File Write Error", M_ICONERROR|M_YESNO) == IDNO) 
		// // MDAConverterData.cpp (62000)과 같은 내용이라 중복 사용
		if (MyMessageBox(MY_MESSAGE_BOX, 62000, _T("File Write Error"), M_ICONERROR|M_YESNO) == IDNO)
			return FALSE;
	}

	BOOL ret = TRUE;

	if (!SetValue(m_strSection, _T("CWSWLimit"), dCWSWLimit))
		DISPLAY_WRITE_ERROR(m_strSection, "CWSWLimit", ret);

	if (!SetValue(m_strSection, _T("CCWSWLimit"), dCCWSWLimit))					
		DISPLAY_WRITE_ERROR(m_strSection, "CCWSWLimit", ret);

	if (!SetValue(m_strSection, _T("HomeFastVelocity"), dHomeFastVelocity))		
		DISPLAY_WRITE_ERROR(m_strSection, "HomeFastVelocity", ret);

	if (!SetValue(m_strSection, _T("HomeSlowVelocity"), dHomeSlowVelocity))		
		DISPLAY_WRITE_ERROR(m_strSection, "HomeSlowVelocity", ret);

	if (!SetValue(m_strSection, _T("HomeAccelerate"), iHomeAccelerate))			
		DISPLAY_WRITE_ERROR(m_strSection, "HomeAccelerate", ret);

	if (!SetValue(m_strSection, _T("HomeOffset"), dHomeOffset))					
		DISPLAY_WRITE_ERROR(m_strSection, "HomeOffset", ret);

	if (!SetValue(m_strSection, _T("JogSlow"), dJogSlow))						
		DISPLAY_WRITE_ERROR(m_strSection, "JogSlow", ret);

	if (!SetValue(m_strSection, _T("JogFast"), dJogFast))				
		DISPLAY_WRITE_ERROR(m_strSection, "JogFast", ret);

	if (!SetValue(m_strSection, _T("RunAccelerate"), iRunAccelerate))			
		DISPLAY_WRITE_ERROR(m_strSection, "RunAccelerate", ret);

	if (!SetValue(m_strSection, _T("RunVelocity"), dRunVelocity))				
		DISPLAY_WRITE_ERROR(m_strSection, "RunVelocity", ret);

	if (!SetValue(m_strSection, _T("SlowRunVelocity"), dSlowRunVelocity))		
		DISPLAY_WRITE_ERROR(m_strSection, "SlowRunVelocity", ret);

	if (!SetValue(m_strSection, _T("LimitTime"), dLimitTime))					
		DISPLAY_WRITE_ERROR(m_strSection, "LimitTime", ret);

	if (!SetValue(m_strSection, _T("OriginLimitTime"), dOriginLimitTime))		
		DISPLAY_WRITE_ERROR(m_strSection, "OriginLimitTime", ret);

	if (!SetValue(m_strSection, _T("StabilityTime"), dStabilityTime))			
		DISPLAY_WRITE_ERROR(m_strSection, "StabilityTime", ret);

	if (!SetValue(m_strSection, _T("Tolerance"), dTolerance))					
		DISPLAY_WRITE_ERROR(m_strSection, "Tolerance", ret);

	if (!SetValue(m_strSection, _T("PassOffset"), dPassOffset))					
		DISPLAY_WRITE_ERROR(m_strSection, "PassOffset", ret);

	return ret;
}

void MAxisData::SetSection(CString strSection)
{
	m_strSection = strSection;
}
/* End Of Code */
